AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: Lambda submitting submissions to FormStack
Parameters:
    Stack:
        Description: Stack name
        Type: String
        Default: content-api-formstack
    App:
        Description: Application name
        Type: String
        Default: formstack-submitter
    Stage:
        Description: Stage name
        Type: String
        AllowedValues:
            - PROD
            - CODE
        Default: CODE
    FormStackUrl:
        Description: Base URL of the FormStack API
        Type: String
        Default: https://www.formstack.com/api/v2/form
    OAuthToken:
        Description: The authentication token for accessing the FormStack API
        Type: String

Resources:
    LambdaRole:
        Type: AWS::IAM::Role
        Properties:
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
            AssumeRolePolicyDocument:
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                             - lambda.amazonaws.com
                      Action:
                          - sts:AssumeRole
            Path: /
    FormStackLambda:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${App}-${Stage}
            Handler: com.gu.formstack.FormStackLambda::handle
            Role: !Sub ${LambdaRole.Arn}
            Environment:
                Variables:
                    OAUTH_TOKEN: !Ref OAuthToken
                    FORMSTACK_URL: !Ref FormStackUrl
            CodeUri:
                Bucket: content-api-dist
                Key: !Sub ${Stack}/${Stage}/${App}/${App}.zip
            MemorySize: 320
            Runtime: java8
            Timeout: 30
    ApiFrontend:
        DependsOn: APIPermission
        Type: AWS::ApiGateway::Method
        Properties:
            AuthorizationType: NONE
            HttpMethod: POST
            ResourceId: !Ref APIResource
            RestApiId: !Ref APIRestAPI
            Integration:
                Type: AWS_PROXY
                IntegrationHttpMethod: POST
                Uri: !Sub
                  - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Arn}/invocations
                  - Arn: !GetAtt FormStackLambda.Arn
    APIRestAPI:
        Type: AWS::ApiGateway::RestApi
        Properties:
            Name: !Sub FormstackAPI-${Stage}
    APIPermission:
        Type: AWS::Lambda::Permission
        Properties:
            Action: lambda:invokeFunction
            FunctionName: !GetAtt FormStackLambda.Arn
            Principal: apigateway.amazonaws.com
            SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${APIRestAPI}/*"
    APIStage:
        Type: AWS::ApiGateway::Stage
        Properties: 
            DeploymentId: !Ref APIDeployment
            MethodSettings:
                - DataTraceEnabled: true
                  HttpMethod: "*"
                  LoggingLevel: INFO
                  ResourcePath: "/*"
            RestApiId: !Ref APIRestAPI
            StageName: LATEST
    APIDeployment:
        Type: AWS::ApiGateway::Deployment
        DependsOn: ApiFrontend
        Properties:
            RestApiId: !Ref APIRestAPI
            StageName: DummyStage
    APIResource:
        Type: AWS::ApiGateway::Resource
        Properties:
            RestApiId: !Ref APIRestAPI
            PathPart: "formstack"
            ParentId:
                Fn::GetAtt: 
                  - "APIRestAPI"
                  - "RootResourceId"